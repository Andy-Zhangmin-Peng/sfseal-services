<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanyun.sfseal.db.mapper.user.AccountRoleXrefModelMapper">
    <resultMap id="BaseResultMap" type="com.wanyun.sfseal.db.model.user.AccountRoleXrefModel">
        <!--@mbg.generated-->
        <!--@Table sfseal_user.account_role_xref-->
        <id column="xref_id" jdbcType="BIGINT" property="xrefId"/>
        <result column="account_id" jdbcType="BIGINT" property="accountId"/>
        <result column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate"/>
        <result column="last_update_user" jdbcType="VARCHAR" property="lastUpdateUser"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        xref_id, account_id, role_id, create_date, last_update_date, last_update_user
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from sfseal_user.account_role_xref
        where xref_id = #{xrefId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from sfseal_user.account_role_xref
        where xref_id = #{xrefId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="xref_id" keyProperty="xrefId"
            parameterType="com.wanyun.sfseal.db.model.user.AccountRoleXrefModel" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sfseal_user.account_role_xref (account_id, role_id, create_date,
        last_update_date, last_update_user)
        values (#{accountId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP},
        #{lastUpdateDate,jdbcType=TIMESTAMP}, #{lastUpdateUser,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="xref_id" keyProperty="xrefId"
            parameterType="com.wanyun.sfseal.db.model.user.AccountRoleXrefModel" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sfseal_user.account_role_xref
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">
                account_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="lastUpdateDate != null">
                last_update_date,
            </if>
            <if test="lastUpdateUser != null">
                last_update_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accountId != null">
                #{accountId,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateDate != null">
                #{lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateUser != null">
                #{lastUpdateUser,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.wanyun.sfseal.db.model.user.AccountRoleXrefModel">
        <!--@mbg.generated-->
        update sfseal_user.account_role_xref
        <set>
            <if test="accountId != null">
                account_id = #{accountId,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateDate != null">
                last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateUser != null">
                last_update_user = #{lastUpdateUser,jdbcType=VARCHAR},
            </if>
        </set>
        where xref_id = #{xrefId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wanyun.sfseal.db.model.user.AccountRoleXrefModel">
        <!--@mbg.generated-->
        update sfseal_user.account_role_xref
        set account_id = #{accountId,jdbcType=BIGINT},
        role_id = #{roleId,jdbcType=BIGINT},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
        last_update_user = #{lastUpdateUser,jdbcType=VARCHAR}
        where xref_id = #{xrefId,jdbcType=BIGINT}
    </update>

    <insert id="upsert">
        insert into
        sfseal_user.account_role_xref
            (account_id,
            role_id,
            create_date,
            last_update_date,
            last_update_user)
        values
            (#{accountId,jdbcType=BIGINT},
            #{roleId,jdbcType=BIGINT},
            #{createDate,jdbcType=TIMESTAMP},
            #{lastUpdateDate,jdbcType=TIMESTAMP},
            #{lastUpdateUser,jdbcType=VARCHAR})
        on
            conflict(account_id,role_id) do
        update set
            last_update_date= current_timestamp,
            last_update_user = #{lastUpdateUser,jdbcType=VARCHAR}
    </insert>
</mapper>