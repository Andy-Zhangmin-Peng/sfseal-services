<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanyun.sfseal.db.mapper.company.WorkOrderAddressModelMapper">
  <resultMap id="BaseResultMap" type="com.wanyun.sfseal.db.model.company.WorkOrderAddressModel">
    <!--@mbg.generated-->
    <!--@Table sfseal_company.work_order_address-->
    <id column="address_id" jdbcType="BIGINT" property="addressId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate" />
    <result column="last_update_user" jdbcType="VARCHAR" property="lastUpdateUser" />
    <result column="work_order_id" jdbcType="BIGINT" property="workOrderId" />
    <result column="lng_lat" property="lngLat" />
    <result column="address_type" jdbcType="BIGINT" property="addressType" />
    <result column="address_detail" jdbcType="VARCHAR" property="addressDetail" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    address_id, create_date, last_update_date, last_update_user, work_order_id, lng_lat,
    address_type, address_detail
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from sfseal_company.work_order_address
    where address_id = #{addressId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from sfseal_company.work_order_address
    where address_id = #{addressId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="address_id" keyProperty="addressId" parameterType="com.wanyun.sfseal.db.model.company.WorkOrderAddressModel" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sfseal_company.work_order_address (create_date, last_update_date, last_update_user,
      work_order_id, lng_lat, address_type,
      address_detail)
    values (#{createDate,jdbcType=TIMESTAMP}, #{lastUpdateDate,jdbcType=TIMESTAMP}, #{lastUpdateUser,jdbcType=VARCHAR},
      #{workOrderId,jdbcType=BIGINT}, #{lngLat}, #{addressType,jdbcType=BIGINT},
      #{addressDetail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="address_id" keyProperty="addressId" parameterType="com.wanyun.sfseal.db.model.company.WorkOrderAddressModel" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sfseal_company.work_order_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createDate != null">
        create_date,
      </if>
      <if test="lastUpdateDate != null">
        last_update_date,
      </if>
      <if test="lastUpdateUser != null">
        last_update_user,
      </if>
      <if test="workOrderId != null">
        work_order_id,
      </if>
      <if test="lngLat != null">
        lng_lat,
      </if>
      <if test="addressType != null">
        address_type,
      </if>
      <if test="addressDetail != null">
        address_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateDate != null">
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateUser != null">
        #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="workOrderId != null">
        #{workOrderId,jdbcType=BIGINT},
      </if>
      <if test="lngLat != null">
        #{lngLat},
      </if>
      <if test="addressType != null">
        #{addressType,jdbcType=BIGINT},
      </if>
      <if test="addressDetail != null">
        #{addressDetail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wanyun.sfseal.db.model.company.WorkOrderAddressModel">
    <!--@mbg.generated-->
    update sfseal_company.work_order_address
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateDate != null">
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateUser != null">
        last_update_user = #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="workOrderId != null">
        work_order_id = #{workOrderId,jdbcType=BIGINT},
      </if>
      <if test="lngLat != null">
        lng_lat = #{lngLat},
      </if>
      <if test="addressType != null">
        address_type = #{addressType,jdbcType=BIGINT},
      </if>
      <if test="addressDetail != null">
        address_detail = #{addressDetail,jdbcType=VARCHAR},
      </if>
    </set>
    where address_id = #{addressId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wanyun.sfseal.db.model.company.WorkOrderAddressModel">
    <!--@mbg.generated-->
    update sfseal_company.work_order_address
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      last_update_user = #{lastUpdateUser,jdbcType=VARCHAR},
      work_order_id = #{workOrderId,jdbcType=BIGINT},
      lng_lat = #{lngLat},
      address_type = #{addressType,jdbcType=BIGINT},
      address_detail = #{addressDetail,jdbcType=VARCHAR}
    where address_id = #{addressId,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sfseal_company.work_order_address
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="create_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when address_id = #{item.addressId,jdbcType=BIGINT} then #{item.createDate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="last_update_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when address_id = #{item.addressId,jdbcType=BIGINT} then #{item.lastUpdateDate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="last_update_user = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when address_id = #{item.addressId,jdbcType=BIGINT} then #{item.lastUpdateUser,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="work_order_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when address_id = #{item.addressId,jdbcType=BIGINT} then #{item.workOrderId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="lng_lat = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when address_id = #{item.addressId,jdbcType=BIGINT} then #{item.lngLat}
        </foreach>
      </trim>
      <trim prefix="address_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when address_id = #{item.addressId,jdbcType=BIGINT} then #{item.addressType,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="address_detail = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when address_id = #{item.addressId,jdbcType=BIGINT} then #{item.addressDetail,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where address_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.addressId,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="address_id" keyProperty="addressId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sfseal_company.work_order_address
    (create_date, last_update_date, last_update_user, work_order_id, lng_lat, address_type,
      address_detail)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.createDate,jdbcType=TIMESTAMP}, #{item.lastUpdateDate,jdbcType=TIMESTAMP},
        #{item.lastUpdateUser,jdbcType=VARCHAR}, #{item.workOrderId,jdbcType=BIGINT}, #{item.lngLat},
        #{item.addressType,jdbcType=BIGINT}, #{item.addressDetail,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <!--  The following is not generated by Mybatis-->
  <select id="selectWorkOrderAddressByOrderId" resultMap="BaseResultMap">
    SELECT
        <include refid="Base_Column_List" />
    FROM
        sfseal_company.work_order_address
    WHERE
        work_order_id = #{workOrderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByWorkOrderId">
    delete from sfseal_company.work_order_address
    where work_order_id in
    <foreach collection="workOrderIdList" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
    <select id="getAddressByWorkorderIdAndAddressType" resultMap="BaseResultMap">
      SELECT <include refid="Base_Column_List" />
      from sfseal_company.work_order_address
      where work_order_id = #{workOrderId,jdbcType=BIGINT}
      and address_type = #{addressType,jdbcType=BIGINT}
    </select>

</mapper>
